<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.OrdersDao">
  <resultMap id="BaseResultMap" type="com.example.demo.entity.Orders">
    <id column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="start_time" jdbcType="DATE" property="startTime" />
    <result column="end_time" jdbcType="DATE" property="endTime" />
    <result column="meal_id" jdbcType="INTEGER" property="mealId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
  </resultMap>
  <sql id="Base_Column_List">
    order_id, start_time, end_time, meal_id, user_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from orders
    where order_id = #{orderId,jdbcType=INTEGER}
  </select>
  <select id="seletePage" resultType="com.example.demo.entity.Orders">
    select <include refid="Base_Column_List" />
    from orders
  </select>
  <select id="selectOutDateOrders" resultType="com.example.demo.entity.Orders">
    select <include refid="Base_Column_List" />
    from orders
    where DATEDIFF(end_time,CURRENT_DATE()) &lt; 0
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from orders
    where order_id = #{orderId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByIdList">
    delete from orders
    where order_id in
    <foreach collection="list" item="item" open="(" separator="," close=")">
       #{item}
    </foreach>
  </delete>


  <insert id="insert" parameterType="com.example.demo.entity.Orders">
    insert into orders (order_id, start_time, end_time, 
      meal_id, user_id)
    values (#{orderId,jdbcType=INTEGER}, #{startTime,jdbcType=DATE}, #{endTime,jdbcType=DATE}, 
      #{mealId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.Orders">
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="mealId != null">
        meal_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=DATE},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=DATE},
      </if>
      <if test="mealId != null">
        #{mealId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>




  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.Orders">
    update orders
    <set>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=DATE},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=DATE},
      </if>
      <if test="mealId != null">
        meal_id = #{mealId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.Orders">
    update orders
    set start_time = #{startTime,jdbcType=DATE},
      end_time = #{endTime,jdbcType=DATE},
      meal_id = #{mealId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER}
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
</mapper>