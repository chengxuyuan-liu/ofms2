<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.DeptMemberDao">


  <!--映射成员实例对象-->
  <resultMap id="BaseResultMap" type="DeptMember">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="dept_id" jdbcType="INTEGER" property="deptId" />
    <result column="team_id" jdbcType="INTEGER" property="teamId" />
    <result column="used_space" jdbcType="INTEGER" property="usedSpace" />
    <result column="max_space" jdbcType="INTEGER" property="maxSpace" />
    <result column="recent" jdbcType="TIMESTAMP" property="recent" />
    <result column="p_upload" jdbcType="INTEGER" property="pUpload" />
    <result column="p_down" jdbcType="INTEGER" property="pDown" />
    <result column="p_preview" jdbcType="INTEGER" property="pPreview" />
  </resultMap>


  <!--映射成员数据显示对象-->
  <resultMap id="MemberResultMap" type="com.example.demo.vo.MemberVO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="userName" />
    <result column="dept_name" jdbcType="VARCHAR" property="deptName" />
    <result column="user_phone" jdbcType="VARCHAR" property="phone" />
    <result column="used_space" jdbcType="INTEGER" property="usedSpace" />
    <result column="max_space" jdbcType="INTEGER" property="maxSpace" />
    <result column="recent" jdbcType="TIMESTAMP" property="recent" />
    <result column="p_upload" jdbcType="INTEGER" property="pUpload" />
    <result column="p_down" jdbcType="INTEGER" property="pDown" />
    <result column="p_preview" jdbcType="INTEGER" property="pPreview" />
  </resultMap>

<!--  复用sql-->
  <sql id="Base_Column_List">
    id, user_id, dept_id,team_id, used_space, max_space, recent, p_upload, p_down, p_preview
  </sql>

  <!--主键查询-->
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from members
    where id = #{id,jdbcType=INTEGER} and m_status = 1
  </select>


  <!--根据部门查询-->
  <select id="selectListByDeptKey" parameterType="java.lang.Integer" resultMap="MemberResultMap">
        select t2.id,t1.user_id,t1.username,t2.dept_name,t1.email,t2.m_status,t1.user_phone,t2.used_space,t2.max_space,t2.recent,t2.p_upload,t2.p_down,t2.p_preview
        from user_inf as t1 join
        (
        SELECT t3.id,t3.user_id,t3.dept_id,t3.m_status,t4.dept_name,t3.used_space,t3.max_space,t3.recent,t3.p_upload,t3.p_down,t3.p_preview
		FROM members as t3 join department as t4 on t3.dept_id = t4.dept_id
		)
		as t2 on t1.user_id = t2.user_id
        where dept_id = #{deptId,jdbcType=INTEGER} and m_status = 1
  </select>


  <!--团队id-查询-部门成员-->
  <select id="selectListByTeamId" parameterType="java.lang.Integer" resultMap="MemberResultMap">
        select t2.id,t1.user_id,t1.username,t2.dept_name,t1.email,t2.m_status,t1.user_phone,t2.used_space,t2.max_space,t2.recent,t2.p_upload,t2.p_down,t2.p_preview
        from user_inf as t1 join
        (
        SELECT t3.id,t3.user_id,t3.dept_id,t3.team_id,t3.m_status,t4.dept_name,t3.used_space,t3.max_space,t3.recent,t3.p_upload,t3.p_down,t3.p_preview
		FROM members as t3 join department as t4 on t3.dept_id = t4.dept_id
		)
		as t2 on t1.user_id = t2.user_id
        where team_id = #{teamId,jdbcType=INTEGER}
  </select>

  <!--根据用户名-模糊查询-部门成员-->
  <select id="selectByUserName"  resultMap="MemberResultMap">
      select t2.id,t1.username,t1.user_phone,t2.used_space,t2.max_space,t2.recent,t2.p_upload,t2.p_down,t2.p_preview
      from user_inf as t1 join (
          SELECT t3.id,t3.user_id,t3.used_space,t3.max_space,t3.recent,t3.p_upload,t3.p_down,t3.p_preview
          FROM members AS t3 JOIN (
				SELECT team_id
                FROM team
                WHERE	user_id = #{userId})AS t4 ON t4.team_id = t3.team_id
          WHERE t3.m_status = 1) as t2 on t1.user_id = t2.user_id
      where t1.username like "%${userName}%"
  </select>


  <!--团队负责人id-查询-待分配部门成员-->
  <select id="selectToBeAssignedMemberListByUserId" parameterType="java.lang.Integer" resultMap="MemberResultMap">

      select t2.id,t1.username,t1.user_phone,t2.used_space,t2.max_space,t2.recent,t2.p_upload,t2.p_down,t2.p_preview
      from user_inf as t1 join (
          SELECT t3.id,t3.user_id,t3.used_space,t3.max_space,t3.recent,t3.p_upload,t3.p_down,t3.p_preview
          FROM members AS t3 JOIN (
				SELECT team_id
                FROM team
                WHERE	user_id = #{userId}
				)AS t4 ON t4.team_id = t3.team_id
					WHERE t3.m_status = 0
				) as t2 on t1.user_id = t2.user_id

  </select>

  <!--用户名-模糊查询-待分配部门成员-->
  <select id="selectToBeAssignedMemberByUserName"  resultMap="MemberResultMap">
      select t2.id,t1.username,t1.user_phone,t2.used_space,t2.max_space,t2.recent,t2.p_upload,t2.p_down,t2.p_preview
      from user_inf as t1 join (
          SELECT t3.id,t3.user_id,t3.used_space,t3.max_space,t3.recent,t3.p_upload,t3.p_down,t3.p_preview
          FROM members AS t3 JOIN (
				SELECT team_id
                FROM team
                WHERE	user_id = #{userId})AS t4 ON t4.team_id = t3.team_id
          WHERE t3.m_status = 0) as t2 on t1.user_id = t2.user_id
      where t1.username like "%${userName}%"
  </select>

  <!--手机号码-查询-待分配部门成员-->
  <select id="selectToBeAssignedMemberByPhone"  resultMap="MemberResultMap">
      select t2.id,t1.username,t1.user_phone,t2.used_space,t2.max_space,t2.recent,t2.p_upload,t2.p_down,t2.p_preview
      from user_inf as t1 join (
          SELECT t3.id,t3.user_id,t3.used_space,t3.max_space,t3.recent,t3.p_upload,t3.p_down,t3.p_preview
          FROM members AS t3 JOIN (
				SELECT team_id
                FROM team
                WHERE	user_id = #{userId})AS t4 ON t4.team_id = t3.team_id
          WHERE t3.m_status = 0) as t2 on t1.user_id = t2.user_id
      where t1.user_phone = #{phone}
  </select>


  <!--用户id查询部门成员-->
  <select id="selectByUserKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from members
    where user_id = #{userId,jdbcType=INTEGER}
  </select>


  <!--删除===============================================-->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from members
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <delete id="deleteByDeptId" parameterType="java.lang.Integer">
    delete from members
    where dept_id = #{deptId,jdbcType=INTEGER}
  </delete>



  <!--插入===============================================-->
  <insert id="insert" parameterType="DeptMember">
    insert into members (id, user_id, dept_id, 
      used_space, max_space, recent, 
      p_upload, p_down, p_preview
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{deptId,jdbcType=INTEGER}, 
      #{usedSpace,jdbcType=INTEGER}, #{maxSpace,jdbcType=INTEGER}, #{recent,jdbcType=TIMESTAMP}, 
      #{pUpload,jdbcType=INTEGER}, #{pDown,jdbcType=INTEGER}, #{pPreview,jdbcType=INTEGER}
      )
  </insert>



  <insert id="insertSelective" parameterType="DeptMember">
    insert into members
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="deptId != null">
        dept_id,
      </if>
      <if test="teamId != null">
        team_id,
      </if>
      <if test="usedSpace != null">
        used_space,
      </if>
      <if test="maxSpace != null">
        max_space,
      </if>
      <if test="recent != null">
        recent,
      </if>
      <if test="pUpload != null">
        p_upload,
      </if>
      <if test="pDown != null">
        p_down,
      </if>
      <if test="pPreview != null">
        p_preview,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="teamId != null">
        #{teamId,jdbcType=INTEGER},
      </if>
      <if test="usedSpace != null">
        #{usedSpace,jdbcType=INTEGER},
      </if>
      <if test="maxSpace != null">
        #{maxSpace,jdbcType=INTEGER},
      </if>
      <if test="recent != null">
        #{recent,jdbcType=TIMESTAMP},
      </if>
      <if test="pUpload != null">
        #{pUpload,jdbcType=INTEGER},
      </if>
      <if test="pDown != null">
        #{pDown,jdbcType=INTEGER},
      </if>
      <if test="pPreview != null">
        #{pPreview,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>


  <!--更新===============================================-->
  <update id="updateByPrimaryKeySelective" parameterType="DeptMember">
    update members
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        dept_id = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="mStatus != null">
       m_status = #{mStatus,jdbcType=INTEGER},
      </if>
      <if test="usedSpace != null">
        used_space = #{usedSpace,jdbcType=INTEGER},
      </if>
      <if test="maxSpace != null">
        max_space = #{maxSpace,jdbcType=INTEGER},
      </if>
      <if test="recent != null">
        recent = #{recent,jdbcType=TIMESTAMP},
      </if>
      <if test="pUpload != null">
        p_upload = #{pUpload,jdbcType=INTEGER},
      </if>
      <if test="pDown != null">
        p_down = #{pDown,jdbcType=INTEGER},
      </if>
      <if test="pPreview != null">
        p_preview = #{pPreview,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateByPrimaryKey" parameterType="DeptMember">
    update members
    set user_id = #{userId,jdbcType=INTEGER},
      dept_id = #{deptId,jdbcType=INTEGER},
      used_space = #{usedSpace,jdbcType=INTEGER},
      max_space = #{maxSpace,jdbcType=INTEGER},
      recent = #{recent,jdbcType=TIMESTAMP},
      p_upload = #{pUpload,jdbcType=INTEGER},
      p_down = #{pDown,jdbcType=INTEGER},
      p_preview = #{pPreview,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateDeptById" parameterType="java.lang.Integer">
    update members set m_status = 0,dept_id = null
    <where>
      <if test="id !=null and id !='' ">
        id = #{id,jdbcType=INTEGER}
      </if>
      <if test="deptId != null and deptId != ''">
        and  dept_id = #{deptId,jdbcType=INTEGER}
      </if>
    </where>
  </update>

  <update id="updateMemberByDeptId" parameterType="java.lang.Integer">
    update members set m_status = 0,dept_id = null where dept_id = #{deptId,jdbcType=INTEGER}
  </update>

</mapper>