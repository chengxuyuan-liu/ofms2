<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.DepartmentDao">
  <resultMap id="BaseResultMap" type="com.example.demo.entity.Department">
    <id column="dept_id" jdbcType="INTEGER" property="deptId" />
    <result column="dept_name" jdbcType="VARCHAR" property="deptName" />
    <result column="fc_id" jdbcType="INTEGER" property="fcId" />
    <result column="team_id" jdbcType="INTEGER" property="teamId" />
  </resultMap>

  <sql id="Base_Column_List">
    dept_id, dept_name, fc_id,team_id
  </sql>


  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from department
    where dept_id = #{deptId,jdbcType=INTEGER}
  </select>

  <select id="selectByTeamId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from department
    where team_id = #{teamId,jdbcType=INTEGER}
  </select>

  <select id="selectByFileCabinetId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from department
    where fc_id = #{fcId,jdbcType=INTEGER}
  </select>

  <select id="selectDeptListByUserId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        CALL selectDept(#{userId,jdbcType=INTEGER});
  </select>



  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from department
    where dept_id = #{deptId,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.example.demo.entity.Department">
    insert into department (dept_id, dept_name, fc_id,team_id
      )
    values (#{deptId,jdbcType=INTEGER}, #{deptName,jdbcType=VARCHAR}, #{fcId,jdbcType=INTEGER}
      )
  </insert>

  <insert id="insertSelective" parameterType="com.example.demo.entity.Department">
    insert into department
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="deptId != null">
        dept_id,
      </if>
      <if test="deptName != null">
        dept_name,
      </if>
      <if test="fcId != null">
        fc_id,
      </if>
      <if test="teamId != null">
        team_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="deptName != null">
        #{deptName,jdbcType=VARCHAR},
      </if>
      <if test="fcId != null">
        #{fcId,jdbcType=INTEGER},
      </if>
      <if test="teamId != null">
        #{teamId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>


  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.Department">
    update department
    <set>
      <if test="deptName != null">
        dept_name = #{deptName,jdbcType=VARCHAR},
      </if>
      <if test="fcId != null">
        fc_id = #{fcId,jdbcType=INTEGER},
      </if>
      <if test="teamId != null">
        team_id = #{teamId,jdbcType=INTEGER},
      </if>
    </set>
    where dept_id = #{deptId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.Department">
    update department
    set dept_name = #{deptName,jdbcType=VARCHAR},
      fc_id = #{fcId,jdbcType=INTEGER},
      team_id = #{teamId,jdbcType=INTEGER}
    where dept_id = #{deptId,jdbcType=INTEGER}
  </update>

</mapper>